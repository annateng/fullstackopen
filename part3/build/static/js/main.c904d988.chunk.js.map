{"version":3,"sources":["services/db.js","App.js","index.js"],"names":["baseUrl","newObject","axios","post","then","response","data","get","id","delete","console","log","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","borderColor","padding","marginBottom","Filter","searchVal","handleChange","value","onChange","PersonForm","handleSubmit","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Persons","persons","setPersons","setErrorMessage","filter","person","name","toLowerCase","includes","map","key","number","onClick","confirmed","personName","indexOf","personsCopy","slice","splice","dbService","deletionMessage","setTimeout","catch","deletePerson","window","confirm","App","useState","setNewName","setNewNumber","setSearchVal","errorMessage","useEffect","db","event","target","preventDefault","oldPersonsIndex","newPerson","newPersons","concat","numChangeMessage","error","createPersonMessage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c904d988.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst create = (newObject) => axios\r\n    .post(baseUrl, newObject)\r\n    .then(response => response.data)\r\n\r\nconst update = (id, newObject) => axios\r\n    .put(`${baseUrl}/${id}`, newObject)\r\n    .then(response => response => response.data)\r\n\r\nconst getAll = () => axios\r\n    .get(baseUrl)\r\n    .then(response => response.data)\r\n\r\nconst deleteEntry = (id) => axios\r\n    .delete(`${baseUrl}/${id}`)\r\n    .then(response => {console.log('successful deletion')})\r\n\r\n\r\nexport default { create, update, getAll, deleteEntry };\r\n","import React, { useState, useEffect } from 'react'\r\nimport dbService from './services/db'\r\nimport db from './services/db'\r\n\r\nconst Notification = ({message}) => {\r\n  const notificationStyle = {\r\n    color: 'red',\r\n    background: 'lightgrey',\r\n    fontSize: '20px',\r\n    borderStyle: 'solid',\r\n    borderRadius: '5px',\r\n    borderColor: 'yellow',\r\n    padding: '10px',\r\n    marginBottom: '10px'\r\n  }\r\n  \r\n  if (message === null) return null\r\n  else return <div style={notificationStyle}>{message}</div>\r\n}\r\n\r\nconst Filter = ({searchVal, handleChange}) => (\r\n  <div>\r\n    filter shown with: <input value={searchVal} onChange={handleChange} />\r\n  </div>\r\n)\r\n\r\nconst PersonForm = ({handleSubmit, newName, handleNameChange, newNumber, handleNumberChange}) => (\r\n  <form onSubmit={handleSubmit}>\r\n    <div>\r\n      name: <input value={newName} onChange={handleNameChange}/>\r\n    </div>\r\n    <div>\r\n      number: <input value={newNumber} onChange={handleNumberChange}/>\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n)\r\n\r\nconst Persons = ({persons, searchVal, setPersons, setErrorMessage}) => {\r\n  \r\n  const deletePerson = (id, confirmed) => {\r\n    const personName = persons[persons.map(person => person.id).indexOf(id)].name\r\n\r\n    // if not confirmed, do nothing\r\n    if (!confirmed) {\r\n      // set no change made message\r\n      const noChangeMessage = `No change was made to the phonebook`\r\n      setErrorMessage(noChangeMessage)\r\n      setTimeout(() => setErrorMessage(null), 5000)\r\n    } else {\r\n      // remove person from the phonebook\r\n      const personsCopy = persons.slice()\r\n      personsCopy.splice(personsCopy.map(person => person.id).indexOf(id), 1)\r\n      \r\n      \r\n      \r\n      dbService.deleteEntry(id)\r\n        .then(() => {\r\n          setPersons(personsCopy)\r\n          // set successful deletion message\r\n          const deletionMessage = `${personName} was successfully removed from the phonebook`\r\n          setErrorMessage(deletionMessage)\r\n          setTimeout(() => setErrorMessage(null), 5000)\r\n        })\r\n        .catch(() => { // catch error if entry was previously deleted already\r\n          setErrorMessage(`${personName} was already removed from the phonebook`)\r\n          setTimeout(() => setErrorMessage(null), 5000)\r\n          setPersons(personsCopy)\r\n        })\r\n    }\r\n  }\r\n\r\n  return persons.filter(\r\n    person => person.name.toLowerCase().includes(searchVal.toLowerCase())\r\n  ).map(\r\n      person => (\r\n        <div key={person.name}>\r\n          <span>{person.name} {person.number}   </span>\r\n          <button type='button' onClick={() => deletePerson(person.id, window.confirm(`delete ${person.name}?`))}>delete</button>\r\n        </div>\r\n      )\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ searchVal, setSearchVal ] = useState('')\r\n  const [ errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(\r\n    () => {db.getAll().then(response => setPersons(response))},\r\n    []\r\n  )\r\n\r\n  const handleNameChange = (event) => setNewName(event.target.value)\r\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\r\n  const handleSearchChange = (event) => setSearchVal(event.target.value);\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    // if name already exists in phonebook, update number on prompt\r\n    if (persons.map(person => person.name.toLowerCase()).includes(newName.toLowerCase())) {\r\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n        const oldPersonsIndex = persons.map(person => person.name.toLowerCase()).indexOf(newName.toLowerCase())\r\n        \r\n        // update persons array\r\n        const newPerson = persons[oldPersonsIndex]\r\n        newPerson.number = newNumber\r\n        let newPersons = persons.slice()\r\n        newPersons.splice(oldPersonsIndex,1)\r\n        setPersons(newPersons.concat(newPerson))\r\n\r\n        // set successful number change message\r\n        const numChangeMessage = `${newName}'s phone number was successfully changed to ${newNumber}`\r\n        setErrorMessage(numChangeMessage)\r\n        setTimeout(() => setErrorMessage(null), 5000)\r\n      } else {\r\n        // set no change made message\r\n        const noChangeMessage = `No change was made to the phonebook`\r\n        setErrorMessage(noChangeMessage)\r\n        setTimeout(() => setErrorMessage(null), 5000)\r\n      }\r\n    } \r\n    else { // otherwise, add person to phone book\r\n      dbService.create({name: newName, number: newNumber})\r\n              .then(response => setPersons(persons.concat(response)))\r\n              .catch(error => console.log(error))\r\n      \r\n      // set successful added person message\r\n      const createPersonMessage = `${newName} was successfully added to the phonebook`\r\n      setErrorMessage(createPersonMessage)\r\n      setTimeout(() => setErrorMessage(null), 5000)\r\n    }\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n        <Notification message={errorMessage} />\r\n        <Filter searchVal={searchVal} handleChange={handleSearchChange} />\r\n      <h2>add a new</h2>\r\n        <PersonForm handleSubmit={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\r\n      <h2>Numbers</h2>\r\n      <div>\r\n          <Persons persons={persons} searchVal={searchVal} setPersons={setPersons} setErrorMessage={setErrorMessage}/>\r\n      </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}